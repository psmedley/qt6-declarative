/****************************************************************************
**
** Copyright (C) 2020 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtqml-index.html
\title Qt QML
\brief The Qt QML module defines and implements the QML language

The Qt QML module provides a framework for developing applications and libraries
with the \l{QML Applications}{QML language}. It defines and implements the
language and engine infrastructure, and provides an API to enable application
developers to extend the QML language with custom types and integrate QML code
with JavaScript and C++. The Qt QML module provides both a \l{Qt QML QML Types}
{QML API} and a \l{Qt QML C++ Classes}{C++ API}.

Note that while the Qt QML module provides the language and infrastructure
for QML applications, the \l{Qt Quick} module provides many visual components,
model-view support, an animation framework, and much more for building user
interfaces.

If you're new to QML and Qt Quick, see \l{QML Applications} for an
introduction to writing QML applications.

\section1 Using the Module

\section2 QML API

\include {module-use.qdocinc} {using the qml api} {QtQml}

\section2 C++ API

\include {module-use.qdocinc} {using the c++ api}

\section3 Building with CMake

\include {module-use.qdocinc} {building with cmake} {Qml}

To provide foreign QML type support for a non-QML library, locate
the \c QmlIntegration module as follows:

\snippet code/doc_src_qtqml.cmake 1

See \l{qt6_generate_foreign_qml_types} for details.

\section3 Building with qmake

\include {module-use.qdocinc} {building_with_qmake} {qml}

\section1 QML and QML Types

The Qt QML module contains the QML framework and important QML types used in
applications. The constructs of QML are described in the \l{The QML Reference}.

In addition to the \l{QML Basic Types}, the module comes with
the following QML object types:
\list
    \li \l Component
    \li \l QtObject
    \li \l Binding
    \li \l Connections
    \li \l Timer
\endlist

The \l{QtQml::Qt}{Qt} global object provides useful enums and functions
for various QML types.

\section2 Lists and Models

New in Qt 5.1, the model types are moved to a submodule, \c QtQml.Models. The
\l{Qt QML Models QML Types}{Qt QML Models} page has more information.

\list
    \li \l DelegateModel
    \li \l DelegateModelGroup
    \li \l ListElement
    \li \l ListModel
    \li \l ObjectModel
\endlist

\section1 JavaScript Environment for QML Applications

JavaScript expressions allow QML code to contain application logic. Qt QML
provides the framework for running JavaScript expressions in QML and from C++.

These sections are from \l{The QML Reference}.
\list
    \li \l {qtqml-javascript-topic.html} {Integrating QML and JavaScript}
    \li \l {qtqml-javascript-expressions.html}
           {Using JavaScript Expressions with QML}
    \li \l {qtqml-javascript-dynamicobjectcreation.html}
           {Dynamic QML Object Creation from JavaScript}
    \li \l {qtqml-javascript-resources.html}
           {Defining JavaScript Resources In QML}
    \li \l {qtqml-javascript-imports.html}
           {Importing JavaScript Resources In QML}
    \li \l {qtqml-javascript-hostenvironment.html}
           {JavaScript Host Environment}
\endlist

\section1 Integrating QML with C++ Applications

The module also provides the framework for running QML applications.
The QML framework allows QML code to contain JavaScript expressions and for
the QML code to interact with C++ code.

\section2 Articles and Guides

\list
    \li \l {Overview - QML and C++ Integration}
    \li \l {Data Type Conversion Between QML and C++}
    \li \l {Integrating with JavaScript values from C++}
    \li \l {Exposing Attributes of C++ Types to QML}
    \li \l {Defining QML Types from C++}
    \li \l {Writing QML Modules}
    \li \l {Important C++ Classes Provided By The Qt QML Module}
\endlist

\section2 Examples

\list
    \li \l {Writing QML Extensions with C++}
    \li \l {Simple QML and C++ Integration Example}
\endlist

\omit
    \section1 Additional Frameworks
    \list
        \li \l{The Declarative State Machine Framework}
    \endlist
\endomit

\section1 Related Articles and Guides

Further information for writing QML applications:
\list
    \li \l {The QML Reference}
    \li \l {Qt Quick Compiler}
           - overview of Qt Quick Compiler components
    \li \l {QML Applications}
           - essential information for application development with QML and Qt
           Quick
    \li \l {Qt Quick}
           - a module which provides a set of QML types and C++ classes for
           building user interfaces and applications with QML
    \li \l {The QML Disk Cache}
           - how to fine tune if and where the QML engine caches compilation
           results
\endlist

\section1 Examples

\list
    \li \l {Qt QML Examples} {Examples}
\endlist

\section2 Reference

\list
    \li \l {Qt QML C++ Classes} {C++ Classes}
    \li \l {Qt QML QML Types} {QML Types}
\endlist

\section1 Licenses and Attributions

Qt QML is available under commercial licenses from \l{The Qt Company}.
In addition, it is available under free software licenses. Since Qt 5.4,
these free software licenses are
\l{GNU Lesser General Public License, version 3}, or
the \l{GNU General Public License, version 2}.
See \l{Qt Licensing} for further details.

Furthermore Qt QML in Qt \QtVersion may contain third party
modules under following permissive licenses:

\generatelist{groupsbymodule attributions-qtqml}
*/

@@ -446,50 +484,6 @@
                             jsruntime/qv4mathobject.cpp # math.h issues on Windows
                             PROPERTIES SKIP_UNITY_BUILD_INCLUSION ON)
 
-qt_internal_add_qml_module(QmlMeta
-    URI "QtQml"
-    VERSION "${PROJECT_VERSION}"
-    DESIGNER_SUPPORTED
-    CLASS_NAME QtQmlMetaPlugin
-    PLUGIN_TARGET QmlMeta
-
-    # Prevent type registration
-    NO_GENERATE_QMLTYPES
-
-    PAST_MAJOR_VERSIONS 2
-    IMPORTS
-        QtQml.Base/auto
-        ${module_dynamic_qml_imports}
-)
-
-# Add the QtQml qmldir to libQtQml, too.
-# Since we also provide the (bare bones) type  registration in libQtQml,
-# this makes the complete module reside in libQtQml. There is no need to
-# load the QmlMeta plugin, then.
-# Se still provide the plugin so that static linking works.
-get_target_property(qtqml_out_dir QmlMeta QT_QML_MODULE_OUTPUT_DIRECTORY)
-qt_internal_add_resource(Qml "qmlMetaQmldir"
-    PREFIX
-        "/qt-project.org/imports/QtQml"
-    FILES
-        ${qtqml_out_dir}/qmldir
-)
-
-# Linking to the static qml plugin should also automatically link to the worker script
-# static plugin otherwise you get errors like
-#  module "QtQml.WorkerScript" plugin "workerscriptplugin" not found
-#     import QtQuick 2.0
-#     ^
-if(QT_FEATURE_qml_worker_script)
-    _qt_internal_add_qml_static_plugin_dependency(qmlplugin workerscriptplugin)
-endif()
-# Same for the QmlMeta qml plugin, otherwise you get
-#  module "QtQuick" version 6.6 cannot be imported because:
-#  module "QtQml" plugin "qmlmetaplugin" not found
-#     import QtQuick
-#     ^
-_qt_internal_add_qml_static_plugin_dependency(qmlplugin QmlMeta)
-
 # special case begin remove the block, handled manually
 # QLALR Grammars:
 #qt_process_qlalr(

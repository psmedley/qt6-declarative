/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \title QML Plugin Example
    \example qmlextensionplugins

    \brief This example creates a C++ plugin extension by subclassing QQmlEngineExtensionPlugin.

    \image qml-plugins-example.png

    To run this example, use the following commands on the prompt:

    \if defined(onlinedocs)
        \tab {build-qt-app}{tab-cmake}{CMake}{checked}
        \tab {build-qt-app}{tab-qmake}{qmake}{}
        \tabcontent {tab-cmake}
    \else
        \section1 Using CMake
    \endif
        \badcode
            cmake -DCMAKE_PREFIX_PATH=path/to/Qt/6.4.0/your_platform -S <source-dir> -B <build-dir> -G Ninja
            cd path/to/build/dir
            ninja
            qml -I imports plugins.qml
        \endcode
        For more information about building on the command line using CMake,
        see \l {Building projects on the command line}.
    \if defined(onlinedocs)
        \endtabcontent
        \tabcontent {tab-qmake}
    \else
        \section1 Using qmake
    \endif
        \badcode
            qmake
            make
            qml -I imports plugins.qml
        \endcode
    \if defined(onlinedocs)
        \endtabcontent
    \endif
*/
